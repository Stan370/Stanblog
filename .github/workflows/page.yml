name: Pages

on:
  push:
    branches:
      - main # default branch

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # The actions/checkout action clones the repository into a temporary directory and then moves the contents to the workflow's working directory. This ensures that the working directory remains clean and isolated from any other actions or jobs in the workflow.
      - uses: actions/checkout@v4
      - name: Use Node.js 16.x
        uses: actions/setup-node@v4
        with:
          node-version: '16'
      
      - name: Install Dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

# Temporarily skip Docker and Kubernetes deployment steps
# TOD: dockerfile
  # deploy:
  #   needs: build
  #   permissions:
  #     pages: write
  #     id-token: write
  #   environment:
  #     name: github-pages
  #     url: https://stan370.github.io/
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Deploy to GitHub Pages
  #       id: deployment
  #       uses: actions/deploy-pages@v2

  # docker:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - uses: actions/checkout@v3
      
  #     # Set up Docker Buildx
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2
      
  #     # Log in to Docker Hub
  #     - name: Log in to Docker Hub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}

  #     # Build and Push Docker Image
  #     - name: Build and Push Docker Image
  #       uses: docker/build-push-action@v4
  #       with:
  #         context: .
  #         push: true
  #         tags: username/repository:latest

  # deploy_kubernetes:
  #   needs: docker
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Set up Kubernetes
  #       uses: azure/setup-kubectl@v2
  #       with:
  #         version: 'latest'

  #     - name: Deploy to Kubernetes
  #       run: |
  #         kubectl apply -f deployment.yaml
  #         kubectl set image deployment/flask-app flask-app=username/repository:latest
